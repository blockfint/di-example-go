// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/blockfint/di-example-go/app/controller"
	"github.com/blockfint/di-example-go/app/db"
	"github.com/blockfint/di-example-go/app/handler"
	"github.com/blockfint/di-example-go/app/logger"
	"github.com/blockfint/di-example-go/app/repository"
	"github.com/blockfint/di-example-go/app/server"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, error) {
	sugaredLogger := logger.New()
	gormDB, err := db.New(sugaredLogger)
	if err != nil {
		return nil, err
	}
	todoRepository := repository.NewTodoRepository(gormDB, sugaredLogger)
	todoController := controller.NewTodoController(todoRepository, sugaredLogger)
	customerRepository := repository.NewCustomerRepository(gormDB, sugaredLogger)
	customerController := controller.NewCustomerController(customerRepository, sugaredLogger)
	handlerHandler := handler.New(todoController, customerController, sugaredLogger)
	zapLogger := logger.NewZapLogger()
	serverServer := server.New(handlerHandler, zapLogger)
	application := NewApplication(serverServer)
	return application, nil
}

// wire.go:

var controllerSet = wire.NewSet(controller.NewTodoController, controller.NewCustomerController)

var repositorySet = wire.NewSet(repository.NewTodoRepository, repository.NewCustomerRepository)
